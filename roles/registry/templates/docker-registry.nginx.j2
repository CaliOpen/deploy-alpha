http {

  upstream docker-registry {
    server 127.0.0.1:5000;
  }

  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name registry.{{ caliopen_domain_base }};

    ssl_certificate     /etc/nginx/certs/{{ caliopen_domain_base }}.crt;
    ssl_certificate_key /etc/nginx/certs/{{ caliopen_domain_base }}.key;
    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS;
    ssl_session_cache shared:SSL:10m;

    client_max_body_size 0;
    chunked_transfer_encoding on;

    location /v2/ {

    	if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
    	  return 404;
    	}

    	auth_basic "Registry realm";
    	auth_basic_user_file /etc/nginx/auth/registry.htpasswd;

    	add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

    	proxy_pass http://docker-registry;
    	proxy_set_header Host $http_host;
    	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;
    	proxy_read_timeout 900;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name public-registry.{{ caliopen_domain_base }};

    ssl_certificate     /etc/nginx/certs/{{ caliopen_domain_base }}.crt;
    ssl_certificate_key /etc/nginx/certs/{{ caliopen_domain_base }}.key;
    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS;
    ssl_session_cache shared:SSL:10m;

    client_max_body_size 0;
    chunked_transfer_encoding on;
    
    if ($request_method !~ ^(GET|HEAD)$ ) {
      return 444;
    }

    location /v2/ {

      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }

      auth_basic off;

      add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
	
      proxy_pass http://docker-registry;
      proxy_read_timeout 900;
    }   
  }

}
